"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Classes = module.parent.exports.Classes;
exports.command = new Classes.Command({
    name: "sock",
    desc: "Dispatch a socket event",
    exp: new RegExp('^' + Classes.Command.prefix + "sock .+$", "sim"),
    usage: eval("'" + Classes.Command.prefix + "'") + "sock parameters<String[]>",
    _compl: eval("'" + Classes.Command.prefix + "'") + "sock ",
    _priority: 3,
    body: function body(panel, ...params) {
        //@ts-ignore
        return panel.sock.of("/admin").in("admin").emit(...params);
    },
    parse: function parse(line, panel) {
        let nline = line.split(' ');
        return this.body(panel, ...nline.slice(1, nline.length));
    } //parse
});
exports.default = exports.command;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29jay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21tYW5kcy9zb2NrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7QUFFYixNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFJbkMsUUFBQSxPQUFPLEdBQUcsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDO0lBQ3hDLElBQUksRUFBRSxNQUFNO0lBQ1osSUFBSSxFQUFFLHlCQUF5QjtJQUMvQixHQUFHLEVBQUUsSUFBSSxNQUFNLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLFVBQVUsRUFBRSxLQUFLLENBQUM7SUFDakUsS0FBSyxFQUFFLElBQUksQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLEdBQUcsMkJBQTJCO0lBQzdFLE1BQU0sRUFBRSxJQUFJLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxHQUFHLE9BQU87SUFDMUQsU0FBUyxFQUFFLENBQUM7SUFDWixJQUFJLEVBQUUsU0FBUyxJQUFJLENBQUMsS0FBZSxFQUFFLEdBQUcsTUFBZ0I7UUFDdkQsWUFBWTtRQUNaLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFDRCxLQUFLLEVBQUUsU0FBUyxLQUFLLENBQUMsSUFBWSxFQUFFLEtBQWU7UUFDbEQsSUFBSSxLQUFLLEdBQWEsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDMUQsQ0FBQyxDQUFDLE9BQU87Q0FDVCxDQUFDLENBQUM7QUFFSCxrQkFBZSxlQUFPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgQ2xhc3NlcyA9IG1vZHVsZS5wYXJlbnQuZXhwb3J0cy5DbGFzc2VzO1xuXG5pbXBvcnQgeyBDbGFzc2VzIGFzIENUIH0gZnJvbSBcIi4uL0NsYXNzZXNcIjtcblxuZXhwb3J0IHZhciBjb21tYW5kID0gbmV3IENsYXNzZXMuQ29tbWFuZCh7XG5cdG5hbWU6IFwic29ja1wiLFxuXHRkZXNjOiBcIkRpc3BhdGNoIGEgc29ja2V0IGV2ZW50XCIsXG5cdGV4cDogbmV3IFJlZ0V4cCgnXicgKyBDbGFzc2VzLkNvbW1hbmQucHJlZml4ICsgXCJzb2NrIC4rJFwiLCBcInNpbVwiKSxcblx0dXNhZ2U6IGV2YWwoXCInXCIgKyBDbGFzc2VzLkNvbW1hbmQucHJlZml4ICsgXCInXCIpICsgXCJzb2NrIHBhcmFtZXRlcnM8U3RyaW5nW10+XCIsXG5cdF9jb21wbDogZXZhbChcIidcIiArIENsYXNzZXMuQ29tbWFuZC5wcmVmaXggKyBcIidcIikgKyBcInNvY2sgXCIsXG5cdF9wcmlvcml0eTogMyxcblx0Ym9keTogZnVuY3Rpb24gYm9keShwYW5lbDogQ1QuUGFuZWwsIC4uLnBhcmFtczogc3RyaW5nW10pIHtcblx0XHQvL0B0cy1pZ25vcmVcblx0XHRyZXR1cm4gcGFuZWwuc29jay5vZihcIi9hZG1pblwiKS5pbihcImFkbWluXCIpLmVtaXQoLi4ucGFyYW1zKTtcblx0fSwgLy9ib2R5XG5cdHBhcnNlOiBmdW5jdGlvbiBwYXJzZShsaW5lOiBzdHJpbmcsIHBhbmVsOiBDVC5QYW5lbCkge1xuXHRcdGxldCBubGluZTogc3RyaW5nW10gPSBsaW5lLnNwbGl0KCcgJyk7XG5cdFx0cmV0dXJuIHRoaXMuYm9keShwYW5lbCwgLi4ubmxpbmUuc2xpY2UoMSwgbmxpbmUubGVuZ3RoKSk7XG5cdH0gLy9wYXJzZVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbW1hbmQ7XG4iXX0=